name: Performance Regression Testing

# Run on every PR and push to main to catch performance regressions early
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  performance-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent hanging benchmarks

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch history for baseline comparison
        fetch-depth: 50

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run performance benchmark
      run: |
        # Run the standard benchmark
        uv run python benchmark/benchmark.py --standard

    - name: Check for performance regression
      run: |
        # Run regression detection (automatically reads latest benchmark result)
        uv run python benchmark/regression_detector.py \
          --threshold 15.0 \
          --json > regression_result.json

        # Display results
        echo "üìä Performance Regression Check Results:"
        cat regression_result.json

        # Check if regression was detected (don't fail build, just warn)
        if uv run python benchmark/regression_detector.py --threshold 15.0; then
          echo "‚úÖ No performance regression detected"
        else
          echo "‚ö†Ô∏è Performance regression detected!"
          echo "::warning::Performance dropped by more than 15% compared to recent baseline"
        fi

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: |
          benchmark/results/
          regression_result.json
        retention-days: 30

    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          // Read regression results
          const regressionData = JSON.parse(fs.readFileSync('regression_result.json', 'utf8'));
          const currentPerf = regressionData.current_pw_per_sec;
          const baseline = regressionData.baseline_pw_per_sec;
          const dropPercent = regressionData.performance_drop_percent;

          let emoji = '‚úÖ';
          let status = 'Good';
          if (regressionData.status === 'regression') {
            emoji = '‚ö†Ô∏è';
            status = 'Regression Detected';
          } else if (dropPercent < 0) {
            emoji = 'üöÄ';
            status = 'Performance Improved';
          }

          const comment = `## ${emoji} Performance Test Results

          **Status:** ${status}

          | Metric | Value |
          |--------|-------|
          | Current Performance | ${currentPerf?.toLocaleString() || 'N/A'} pw/s |
          | Baseline Performance | ${baseline?.toLocaleString() || 'N/A'} pw/s |
          | Change | ${dropPercent > 0 ? '-' : '+'}${Math.abs(dropPercent || 0).toFixed(1)}% |

          ${regressionData.message}

          <details>
          <summary>View full benchmark details</summary>

          \`\`\`json
          ${JSON.stringify(regressionData, null, 2)}
          \`\`\`
          </details>`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
